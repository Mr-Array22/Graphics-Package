<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>